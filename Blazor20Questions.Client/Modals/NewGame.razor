@using Microsoft.AspNetCore.Blazor.Services
@using System.Net.Http
@using Blazor20Questions.Client.Services
@using Blazor20Questions.Shared

@inject HttpClient Http
@inject IUriHelper UriHelper
@inject ModalService ModalService

<div class="simple-form">
    <div class="form-group">
        <label>
            Please enter what you are thinking of...
            <input type="text" bind="@Subject" class="form-control" id="first-name" placeholder="Enter email" />
        </label>
    </div>
    <div class="form-group">
        <label>
            Should guesses count as questions?
            <input type="checkbox" bind="@GuessesCountAsQuestions" />
        </label>
    </div>
    <div class="form-group">
        <label>
            Gane Length (Minutes):
            <input type="number" bind="@Minutes" min="@CreateGameModel.MinMinutes" max="@CreateGameModel.MaxMinutes" />
        </label>
    </div>
    <div class="form-group">
        <label>
            Maximum Questions:
            <input type="number" bind="@Questions" min="@CreateGameModel.MinQuestions" max="@CreateGameModel.MaxQuestions" />
        </label>
    </div>
    <button onclick="@SubmitForm" class="btn btn-primary">Submit</button>

    @if (isError)
    {
        <div class="error">@error</div>
    }
</div>

@functions {
    private string Subject { get; set; }
    private bool GuessesCountAsQuestions { get; set; }
    private int Minutes { get; set; } = 10;
    private int Questions { get; set; } = 20;

    bool isError;
    string error;

    async Task SubmitForm()
    {
        try
        {
            isError = false;
            var game = await Http.PostJsonAsync<GameResponse>("api/Game/Create", new CreateGameModel
            {
                Subject = Subject,
                GuessesCountAsQuestions = GuessesCountAsQuestions,
                Minutes = Minutes,
                Questions = Questions
            });
            UriHelper.NavigateTo($"/game/{game.Id}");
            ModalService.Close();
        }
        catch (HttpRequestException e)
        {
            System.Console.WriteLine("Error: " + e.ToString());
            isError = true;
            error = "An unexpected error occurred";

            if (e.Message.Contains("400"))
            {
                error += "";
            }
        }
    }
}