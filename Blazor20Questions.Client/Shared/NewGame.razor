@using System.Net.Http
@using Blazor20Questions.Client.Services
@using Blazor20Questions.Shared

@inject HttpClient Http
@inject IUriHelper UriHelper
@inject ModalService ModalService

<EditForm OnValidSubmit="SubmitForm" Model="@game">
    <div class="simple-form">
        <div class="form-group">
            <label>
                Please enter what you are thinking of...
                <input type="text" bind="@game.Subject" class="form-control" id="first-name" placeholder="Enter subject..." />
            </label>
        </div>
        <div class="form-group">
            <label>
                Should guesses count as questions?
                <input type="checkbox" bind="@game.GuessesCountAsQuestions" />
            </label>
        </div>
        <div class="form-group">
            <label>
                Allow more than one question at a time?
                <input type="checkbox" bind="@game.AllowConcurrentQuestions" />
            </label>
        </div>
        <div class="form-group">
            <label>
                Game Length (Minutes):
                <input type="number" bind="@game.Minutes" min="@CreateGameModel.MinMinutes" max="@CreateGameModel.MaxMinutes" />
            </label>
        </div>
        <div class="form-group">
            <label>
                Maximum Questions:
                <input type="number" bind="@game.Questions" min="@CreateGameModel.MinQuestions" max="@CreateGameModel.MaxQuestions" />
            </label>
        </div>
        <input type="submit" class="btn btn-primary" value="Submit" />

        @if (isError)
        {
            <div class="error">@error</div>
        }
    </div>
</EditForm>

@functions {
    CreateGameModel game = new CreateGameModel();

    bool isError;
    string error;

    async Task SubmitForm()
    {
        try
        {
            isError = false;
            var createdGame = await Http.PostJsonAsync<GameResponse>("api/Game/Create", game);
            UriHelper.NavigateTo($"/host/{createdGame.Id}");
            ModalService.Close();
        }
        catch (HttpRequestException e)
        {
            System.Console.WriteLine("Error: " + e.ToString());
            isError = true;
            error = "An unexpected error occurred";
        }
    }
}